// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(255)
  role      String?  @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)

  Order     Order[]
  Address   Address[]
  Payment   Payment[]
  Card      Card[]
  Cart      Cart?
}

model Card {
  id            Int         @id @default(autoincrement())
  session       String?     @db.LongText
  createdAt     DateTime    @default(now()) @db.Timestamp(6)
  stripe        String?     @db.LongText
  default       Int         @db.Int

  userId        Int         @unique
  User          User        @relation(fields: [userId], references: [id])

}

model Address {
  id        Int                 @id @default(autoincrement())
  createdAt DateTime            @default(now()) @db.Timestamp(6)

  default           Int         @db.Int
  state             String      @db.VarChar(255)
  name              String      @db.VarChar(255)
  phone             String      @db.VarChar(255)
  street            String      @db.VarChar(255)
  postal            String      @db.VarChar(255)
  city              String      @db.VarChar(255)
  province          String      @db.VarChar(255)
  instructions      String?     @db.VarChar(255)
  directions        String?     @db.VarChar(255)

  userId    Int                 @unique
  User      User                @relation(fields: [userId], references: [id])
}

model Cart {
  id            Int         @id @default(autoincrement())
  session       String?     @db.LongText
  createdAt     DateTime    @default(now()) @db.Timestamp(6)

  userId        Int         @unique
  User          User        @relation(fields: [userId], references: [id])

  orderId       Int         @unique
  Order         Order       @relation(fields: [orderId], references: [id])

  Payment       Payment?
  CartItem      CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  product   String   @db.LongText

  cartId    Int      @unique
  Cart      Cart     @relation(fields: [cartId], references: [id])
}

model Order {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  product   String?  @db.LongText

  userId    Int      @unique
  User      User     @relation(fields: [userId], references: [id])

  Cart      Cart?
  Payment   Payment?
}

model Payment {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now()) @db.Timestamp(6)

  userId        Int         @unique
  User          User        @relation(fields: [userId], references: [id])

  cartId        Int         @unique
  Cart          Cart        @relation(fields: [cartId], references: [id])

  orderId       Int         @unique
  Order         Order       @relation(fields: [orderId], references: [id])
}

model Product {
  id                Int        @id @default(autoincrement())
  uuid              String     @unique @db.VarChar(255)
  createdAt         DateTime   @default(now()) @db.Timestamp(6)

  name              String     @db.VarChar(255)
  description       String     @db.LongText
  presentation      String?    @db.LongText
  cover             String?    @db.LongText

  price             Decimal    @db.Decimal
  discount          Decimal?   @db.Decimal
  weight            Decimal?   @db.Decimal
  quantity          Int?       @db.Int
  categories        String?    @db.LongText

  ProductTag        ProductTag[]
  ProductLangs      ProductLang[]
  ProductImage      ProductImage[]

  AttributeValue    AttributeValuesOnProducts[]

}

model ProductLang {
  id                Int         @id @default(autoincrement())
  createdAt         DateTime    @default(now()) @db.Timestamp(6)
  iso               String     @db.VarChar(255)

  name              String     @db.VarChar(255)
  description       String     @db.LongText
  cover             String?    @db.LongText

  productId         Int        @unique
  Product           Product    @relation(fields: [productId], references: [id])
}

model ProductImage {
  id                Int         @id @default(autoincrement())
  createdAt         DateTime    @default(now()) @db.Timestamp(6)

  base64            String     @db.VarChar(255)

  productId         Int        @unique
  Product           Product    @relation(fields: [productId], references: [id])
}

model Attribute {
  id                Int        @id @default(autoincrement())
  createdAt         DateTime   @default(now()) @db.Timestamp(6)

  name              String     @db.VarChar(255)

  AttributeLangs     AttributeLang[]
  AttributeValues    AttributeValue[]

}

model AttributeLang {
  id                Int        @id @default(autoincrement())
  createdAt         DateTime   @default(now()) @db.Timestamp(6)
  iso               String     @db.VarChar(255)

  name              String     @db.VarChar(255)

  attributeId       Int        @unique
  Attribute         Attribute    @relation(fields: [attributeId], references: [id])

}

model AttributeValue {
  id                Int        @id @default(autoincrement())
  createdAt         DateTime   @default(now()) @db.Timestamp(6)
  spec              String     @db.VarChar(255)

  attributeId       Int        @unique
  Attribute         Attribute  @relation(fields: [attributeId], references: [id])

  Product           AttributeValuesOnProducts[]

}

model AttributeValuesOnProducts {
  Product    Product     @relation(fields: [ProductId], references: [id])
  ProductId  Int // relation scalar field (used in the `@relation` attribute above)

  AttributeValue   AttributeValue @relation(fields: [AttributeValueId], references: [id])
  AttributeValueId Int // relation scalar field (used in the `@relation` attribute above)

  price             Decimal?   @db.Decimal
  discount          Decimal?   @db.Decimal
  impact            Decimal?   @db.Decimal
  cover             String?    @db.LongText

  @@id([ProductId, AttributeValueId])
}

model ProductTag {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now()) @db.Timestamp(6)

  name             String      @db.VarChar(255)

  productId     Int         @unique
  Product       Product     @relation(fields: [productId], references: [id])

  ProductTagLangs       ProductTagLang?
}

model ProductTagLang {
  id               Int         @id @default(autoincrement())
  createdAt        DateTime    @default(now()) @db.Timestamp(6)
  iso               String     @db.VarChar(255)

  name             String      @db.VarChar(255)

  producttagId     Int         @unique
  ProductTag       ProductTag         @relation(fields: [producttagId], references: [id])
}

model Category {
  id                Int       @id @default(autoincrement())
  uuid              String    @unique @db.VarChar(255)
  createdAt         DateTime  @default(now()) @db.Timestamp(6)
  parentId          Int?     @default(0)

  name              String    @db.VarChar(255)
  description       String    @db.LongText

  cover             String?   @db.LongText
  thumbnail         String?   @db.LongText

  CategoryLangs      CategoryLang[]

}

model CategoryLang {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now()) @db.Timestamp(6)
  iso               String     @db.VarChar(255)

  name              String    @db.VarChar(255)
  description       String    @db.LongText
  cover             String?   @db.LongText

  categoryId    Int         @unique
  Category      Category    @relation(fields: [categoryId], references: [id])

}

model Page {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now()) @db.Timestamp(6)

  body          String      @db.LongText
  enabled       Int         @db.Int

  PageLangs      PageLang[]
}

model PageLang {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now()) @db.Timestamp(6)
  iso               String     @db.VarChar(255)

  body          String      @db.LongText

  pageId    Int      @unique
  Page      Page     @relation(fields: [pageId], references: [id])
}

model Lang {
  id            Int         @id @default(autoincrement())
  default       Boolean    @default(false)
  createdAt     DateTime    @default(now()) @db.Timestamp(6)
  name          String    @db.VarChar(255)
  iso           String    @db.VarChar(255)
}

model Settings {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now()) @db.Timestamp(6)
  key           String      @db.VarChar(255)
  value         String      @db.VarChar(255)
}

model Newsletter {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now()) @db.Timestamp(6)
  name          String?      @db.VarChar(255)
  email         String?      @db.VarChar(255)
  phone         String?      @db.VarChar(255)
}